name: Build and Release

on:
  release:
    types: [published]

permissions:
  contents: write

jobs:
  build:
    name: Build for multiple platforms
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: windows
            goarch: amd64
            output: node-module-cleaner.exe
            archive: node-module-cleaner-windows-amd64.zip
          - goos: linux
            goarch: amd64
            output: node-module-cleaner
            archive: node-module-cleaner-linux-amd64.tar.gz
          - goos: darwin
            goarch: arm64
            output: node-module-cleaner-macos-arm64
            archive: node-module-cleaner-macos-arm64.tar.gz

    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        cache: false

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags="-s -w" -o ${{ matrix.output }}

    - name: Create archive (Windows)
      if: matrix.goos == 'windows'
      run: |
        zip ${{ matrix.archive }} ${{ matrix.output }} README.md

    - name: Create archive (Linux)
      if: matrix.goos == 'linux'
      run: |
        tar -czf ${{ matrix.archive }} ${{ matrix.output }} README.md

    - name: Create archive (macOS Apple Silicon)
      if: matrix.goos == 'darwin' && matrix.goarch == 'arm64'
      run: |
        tar -czf ${{ matrix.archive }} ${{ matrix.output }} README.md

    - name: Upload Release Assets
      uses: softprops/action-gh-release@v2
      if: github.event_name == 'release'
      with:
        files: ${{ matrix.archive }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
